alias physicalsp S0;

physicalsp=([PTBR+2*(SP/512)]*512)+(SP%512);


alias syscall S1;
syscall=[physicalsp-1]; //getting syscall

if(syscall==9) then //checking exec r not....

	alias filename S2;
	filename=[physicalsp-3];
	
	alias fatindex S3;
	fatindex=0;
	
	while(fatindex<64 && [FAT+fatindex*8]!=filename) do //checking file existed or not....
	
		fatindex=fatindex+1;
	endwhile;
	
	if(fatindex==64) then //file not existed in disk...
		[physicalsp-2]=-1;
		breakpoint;
		ireturn;
	endif;
	
	alias pid S10;
	alias sysindex S11;
	pid=(PTBR-1024)/8;
	alias pcb S12;
	pcb=READY_LIST+pid*32;
	alias i S7;
	i=0;
	while(i<8) do //closing all files....
		sysindex=[pcb+15+i*2];
		
		if(sysindex!=-1) then
			[FILE_TABLE+sysindex*2+1]=[FILE_TABLE+sysindex*2+1]-1;
			if([FILE_TABLE+sysindex*2+1]==0) then 
				[FILE_TABLE+sysindex*2]=-1;
			endif;
			
			[pcb+15+i*2]=-1;
			[pcb+16+i*2]=0;
		endif;
		
		i=i+1;
	endwhile;

	
	
	alias basicblock S6;
	basicblock=[FAT+fatindex*8+2];
	alias addr S15;
	load(1,basicblock); //loading basicblock
	
	
	i=0;
	while(i<3) do //setting all files in memory
		
		addr=PTBR+i*2;
		if([addr+1]=="01" || [addr+1]=="11") then
			[MEM_LIST+[addr]]=[MEM_LIST+[addr]]-1;
		else if([addr]>=448) then
			[DISK_LIST+[addr]]=[DISK_LIST+[addr]]-1;
			endif;
		endif;

		[addr]=[SCRATCHPAD+i];
		[addr+1]="00";

		
		i=i+1;
	endwhile;

	store(6,20); //storing disk free list
	
	[PTBR+7]="01"; //setting auxilary info for stack
	
	SP=3*512;
	[[PTBR+6]*512]=0;

	breakpoint;
	ireturn;
	
	
	else if(syscall==11) then //getting pid...
			alias pid S15;
			pid=(PTBR-1024)/8;
			[physicalsp-2]=pid;
			breakpoint;
			ireturn;
		else if(syscall==12) then //getting ppid
				alias pid S15;
				pid=(PTBR-1024)/8;
				[physicalsp-2]=[READY_LIST+pid*32+31];
				breakpoint;
				ireturn;
			endif;
		
		endif;
endif;
	
	
		

