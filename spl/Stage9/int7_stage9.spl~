alias physicalsp S0;

physicalsp=([PTBR+(SP/512)*2]*512)+(SP%512);

alias syscall S1;
syscall=[physicalsp-1];

if(syscall==10) then //checking exit or not.....

	alias cpid S2;
	cpid=(PTBR-1024)/8;
	
	alias cpcb S3;
	alias newPCB S4;
	cpcb=READY_LIST+cpid*32;
	[cpcb+1]=0;
	
	if(cpid!=31)
	then
		newPCB=cpcb+32;
	else newPCB=1536;
	endif;

	while([newPCB + 1]!=1 && newPCB!=cpcb) do 
		if(newPCB!= READY_LIST + 31*32)
		then
		newPCB=newPCB+32;
		else newPCB=READY_LIST;
		endif;
	endwhile;
	
	if(newPCB==cpcb) then
		halt;
	endif;
	
	PTLR=4;
	SP = [newPCB+3] + 1;
	PTBR=[newPCB+5];
	BP=[newPCB+2];
	R0=[newPCB+7];
	R1=[newPCB+8];
	R2=[newPCB+9];
	R3=[newPCB+10];
	R4=[newPCB+11];
	R5=[newPCB+12];
	R6=[newPCB+13];
	R7=[newPCB+14];
	alias pb S5;
	pb = ([(PTBR + 2 * (SP / 512))] * 512) + (SP % 512);

	[pb] = [newPCB + 4];
	[newPCB + 1] = 2;
	
	alias i S6;
	alias sysindex S7;
	i=0;
	
	while(i<8) do //closing all files....
		sysindex=[cpcb+15+i*2];
		
		if(sysindex!=-1) then
			[FILE_TABLE+sysindex*2+1]=[FILE_TABLE+sysindex*2+1]-1;
			if([FILE_TABLE+sysindex*2+1]==0) then 
				[FILE_TABLE+sysindex*2]=-1;
			endif;
			
			[cpcb+15+i*2]=-1;
			[cpcb+16+i*2]=0;
		endif;
		
		i=i+1;
	endwhile;
	
	ireturn;
endif;
